class ZeroEvenOdd {
    private int n;
    private Object state = new Object();
    private String type = "Zero";
    private String next = "Odd";
    
    public ZeroEvenOdd(int n) {
        this.n = n;
    }

    // printNumber.accept(x) outputs "x", where x is an integer.
    public void zero(IntConsumer printNumber) throws InterruptedException {
        synchronized(state){
            for(int i=0;i<n;i++){
                while(type!="Zero"){
                    state.wait();
                }
                printNumber.accept(0);
                type = next;
                next = "Zero";
                state.notifyAll();
            }
        }
    }

    public void even(IntConsumer printNumber) throws InterruptedException {
        synchronized(state){
            for(int i=2;i<=n;i+=2){
                while(type!="Even"){
                    state.wait();
                }
                printNumber.accept(i);
                type = next;
                next = "Odd";
                state.notifyAll();
            }
        }
    }

    public void odd(IntConsumer printNumber) throws InterruptedException {
        synchronized(state){
            for(int i=1;i<=n;i+=2){
                while(type!="Odd"){
                    state.wait();
                }
                printNumber.accept(i);
                type = next;
                next = "Even";
                state.notifyAll();
            }
        }
    }
}
